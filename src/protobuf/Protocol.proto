syntax = "proto3";

package protocol; // 네임 스페이스

option csharp_namespace = "Google.Protobuf.Protocol";

// 메세지 아이디
enum MsgId {
  C2S_REGISTER = 0;
  S2C_REGISTER = 1;
  C2S_LOGIN = 2;
  S2C_LOGIN = 3;
  C2S_CREATE_CHARACTER = 4;
  S2C_CREATE_CHARACTER = 5;

  C2S_TOWN_ENTER = 10;
  S2C_TOWN_ENTER = 11;
  C2S_TOWN_LEAVE = 12;
  S2C_TOWN_LEAVE = 13;
  C2S_ANIMATION = 14;
  S2C_ANIMATION = 15;

  C2S_CHAT = 20;
  S2C_CHAT = 21;
  S2C_PLAYER_SPAWN = 22;
  S2C_PLAYER_DESPAWN = 23;

  C2S_PLAYER_MOVE = 30;
  S2C_PLAYER_MOVE = 31;
  C2S_PLAYER_LOCATION = 32;
  S2C_PLAYER_LOCATION = 33;
 
  C2S_PLAYER_COLLISION = 40;
  S2C_PLAYER_COLLISION = 41;
  C2S_MONSTER_COLLISION = 42;
  S2C_MONSTER_COLLISION = 43;

  C2S_CREATE_PARTY = 100;
  S2C_CREATE_PARTY = 101;
  C2S_INVITE_PARTY = 102;
  S2C_INVITE_PARTY = 103;
  C2S_JOIN_PARTY = 104;
  S2C_JOIN_PARTY = 105;
  C2S_LEAVE_PARTY = 106;
  S2C_LEAVE_PARTY = 107;
  C2S_SET_PARTY_LEADER = 108;
  S2C_SET_PARTY_LEADER = 109;
  C2S_KICK_OUT_MEMBER = 110;
  S2C_KICK_OUT_MEMBER = 111;
  C2S_DISBAND_PARTY = 112;
  S2C_DISBAND_PARTY = 113;

  C2S_SECTOR_ENTER = 300;
  S2C_SECTOR_ENTER = 301;
  C2S_SECTOR_LEAVE = 302;
  S2C_SECTOR_LEAVE = 303;
  S2C_IN_PORTAL = 304;
  C2S_IN_PORTAL = 305;

  C2S_ATTACK = 504;
  S2C_ATTACK = 505;
  C2S_HIT = 506;
  S2C_HIT = 507;
  S2C_DIE = 508;

  C2S_MONSTER_LOCATION = 509;
  S2C_MONSTER_LOCATION = 510;
}

/* 게임 시작 관련 */
message C2SRegister {
  string email = 1;
  string pw = 2;
  string pwCheck = 3;
}
message S2CRegister {
  bool isSuccess = 1;
  string msg = 2;
}
message C2SLogin {
  string email = 1;
  string pw = 2;
}
message S2CLogin {
  bool isSuccess = 1;
  string msg = 2;
  repeated OwnedCharacters ownedCharacters = 3;
}
message C2SCreateCharacter {
  string nickname = 1;
  int32 classCode = 2;
}
message S2CCreateCharacter {
  bool isSuccess = 1;
  string msg = 2;
}

/* 마을 관련 */
message C2STownEnter {
  string nickname = 1;
  int32 classCode = 2;
}
message S2CTownEnter {
  PlayerInfo player = 1;
}
message C2STownLeave {}
message S2CTownLeave {}
message C2SAnimation {
  int32 animCode = 1;
}
message S2CAnimation {
  int32 playerId = 1;
  int32 animCode = 2;
}

/* 공통 01 - 채팅, 소환 */
message C2SChat {
  int32 playerId = 1;
  string senderName = 2;
  string chatMsg = 3;
}
message S2CChat {
  int32 playerId = 1;
  string chatMsg = 2;
}
message S2CPlayerSpawn {
  repeated PlayerInfo players = 1;
}
message S2CPlayerDespawn {
  repeated int32 playerIds = 1;
}

/* 공통 02 - 플레이어 이동 */
message C2SPlayerMove {
  float startPosX = 1;
  float startPosY = 2;
  float startPosZ = 3;
  float targetPosX = 4;
  float targetPosY = 5;
  float targetPosZ = 6;
}
message S2CPlayerMove {}
message C2SPlayerLocation {
  TransformInfo transform = 1;
}
message S2CPlayerLocation {
  int32 playerId = 1;
  TransformInfo transform = 2;
  bool isValidTransform = 3;
}
 
/* 공통 03 - 충돌 관련 */
message C2SPlayerCollision {
  int32 playerId = 1;
  CollisionInfo collisionInfo = 2;
}
message S2CPlayerCollision {
  int32 playerId = 1;
  CollisionPushInfo collisionPushInfo = 2;
}
message C2SMonsterCollision {
  int32 monsterId = 1;
  CollisionInfo collisionInfo = 2;
}
message S2CMonsterCollision {
  int32 monsterId = 1;
  CollisionPushInfo collisionPushInfo = 2;
}

/* 파티 관련 */
message C2SCreateParty {
}
message S2CCreateParty {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SInviteParty {
  int32 partyId = 1;
  string nickname = 2;
}
message S2CInviteParty {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SJoinParty {
  int32 partyId = 1;
  int32 newMemberId = 2;
}
message S2CJoinParty {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SLeaveParty {
  int32 partyId = 1;
  int32 leftPlayerId = 2;
}
message S2CLeaveParty {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SSetPartyLeader {
  int32 partyId = 1;
  int32 memberId = 2;
}
message S2CSetPartyLeader {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SKickOutMember {
  int32 partyId = 1;
  int32 memberId  = 2;
}
message S2CKickOutMember {
  int32 partyId = 1;
  int32 leaderId = 2;
  int32 memberCount = 3;
  repeated MemberCardInfo members = 4;
}
message C2SDisbandParty {
  int32 partyId = 1;
}
message S2CDisbandParty {
  string msg = 1;
}

/* 던전 관련 */
message C2SSectorEnter {
  int32 sectorId = 1;
  optional int32 partyId = 2;
}
message S2CSectorEnter {
  SectorInfo sectorInfo = 1;
  PlayerStatus player = 2;
}
message C2SSectorLeave {
  int32 sectorId = 1;
  optional int32 partyId = 2;
}
message S2CSectorLeave {

}

message C2SInPortal {
}
message S2CInPortal {
}

/* 전투 관련 */
message C2SAttack {
  int32 targetId = 1;
  AttackType attackType = 2;
}
message S2CAttack {
  int32 attackerId = 1;
  AttackType attackType = 2;
  int32 animCode = 3;
}
message C2SHit {
  int32 attackerId = 1;
  AttackType attackType = 2;
  int32 hitPlayerId = 3;
}
message S2CHit {
  int32 hitPlayerId = 1;
  int32 animCode = 2;
  int32 damage = 3;
  float updatedHp = 4;
}
message S2CDie {
  int32 deadPlayerId = 1;
  int32 animCode = 2;
}

/* 몬스터 이동 관련 */
message C2SMonsterLocation {
  TransformInfo transform = 1;
}
message S2CMonsterLocation {
  int32 monsterId = 1;
  TransformInfo transform = 2;
}

/* 정보 구조체 */

message PlayerInfo {
  int32 playerId = 1;   // 입장할때 서버 내부에서 생성한 관리코드
  string nickname = 2;
  int32 level = 3;
  int32 classCode = 4;      
  TransformInfo transform = 5;
  StatInfo statInfo = 6;
}

message TransformInfo {
  float posX = 1; // 기본값 : -9 ~ 9
  float posY = 2; // 기본값 : 1
  float posZ = 3; // 기본값 : -8 ~ 8
  float rot = 4; // 기본값 : 0~360
}

message StatInfo {
  int32 level = 1;
  float hp = 2;
  float maxHp = 3;
  float mp = 4;
  float maxMp = 5;
  float atk = 6;
  float def = 7;
  float magic = 8;
  float speed = 9; 
}

message ScreenText{
  string msg = 1;
  bool typingAnimation = 2;
  optional ScreenTextAlignment alignment = 3;
  optional ColorObj textColor = 4;
  optional ColorObj screenColor = 5;
}

message ScreenTextAlignment {
  int32 x = 1;
  int32 y = 2;
}

message ColorObj {
  int32 r = 1;
  int32 g = 2;
  int32 b = 3;
}

message SectorInfo  {
  int32 sectorId = 1;
  repeated MonsterStatus monsters = 2;
}

message MonsterStatus {
  int32 monsterIdx = 1;
  int32 monsterModel = 2;
  string monsterName = 3;
  float monsterHp = 4;
}

message ActionSet {
  int32 animCode = 1;
  int32 effectCode = 2;
}

message PlayerStatus {
  int32 playerClass = 1;
  int32 playerLevel = 2;
  string playerName = 3;
  float playerFullHp = 4;
  float playerFullMp = 5;
  float playerCurHp = 6;
  float playerCurMp = 7;
}

message BattleLog {
  string msg = 1;
  bool typingAnimation = 2;
  repeated BtnInfo btns = 3;
}

message BtnInfo {
  string msg = 1;
  bool enable = 2;
}

message OwnedCharacters {
  string nickname = 1;
  int32 classCode = 2;
}

message MemberId {
  int32 playerId = 1;
}

message AttackType {
  TransformInfo targetTransform = 1;
  int32 skillId = 2;
}

message Vector3Obj {
  float x = 1;
  float y = 2;
  float z = 3;
}

message CollisionInfo {
  Vector3Obj position1 = 1;
  Vector3Obj position2 = 2;
  float radius1 = 3;
  float radius2 = 4;
  float height1 = 5;
  float height2 = 6;
}

message CollisionPushInfo {
  bool hasCollision = 1;
  Vector3Obj pushDirection = 2;
  float pushDistance = 3;
}

message MemberCardInfo {
  int32 id = 1;
  string nickname = 2;
  bool isPartyLeader = 3;
  bool isMine = 4;
}